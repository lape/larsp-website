<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://bridgetownrb.com/" version="1.1.0">Bridgetown</generator><link href="https://larsp.dev/feed.xml" rel="self" type="application/atom+xml" /><link href="https://larsp.dev/" rel="alternate" type="text/html" /><updated>2022-08-19T15:37:41+02:00</updated><id>https://larsp.dev/feed.xml</id><title type="html">larsp.dev</title><subtitle>Drupal and Ruby on Rails software developer here. This is my personal website where I write about my journey as a full stack developer and take notes on things I’ve learned along the way.</subtitle><entry><title type="html">Archiving CMS websites to static files with httrack</title><link href="https://larsp.dev/webtech/archiving-cms-websites-to-static-files-with-httrack/" rel="alternate" type="text/html" title="Archiving CMS websites to static files with httrack" /><published>2022-08-19T00:00:00+02:00</published><updated>2022-08-19T00:00:00+02:00</updated><id>repo://posts.collection/_posts/2022-08-19-archiving-cms-websites-to-static-files-with-httrack.md</id><content type="html" xml:base="https://larsp.dev/webtech/archiving-cms-websites-to-static-files-with-httrack/">&lt;p&gt;When a website made with a content management system like Drupal or Wordpress is no longer updated with content or a campaign has ended, sometimes the webpages need to be archived for reference or just stay online without any more changes. But it’s not always possible to upgrade all of the CMS along the way. Maybe there’s a major version change and it’s not economically reasonable to upgrade the custom modules for a site no longer in production use.&lt;/p&gt;

&lt;p&gt;That’s why it’s convenient to know how to easily archive a site to static HTML files.&lt;/p&gt;

&lt;h2 id=&quot;using-the-httrack-tool-to-archive-a-website&quot;&gt;Using the httrack tool to archive a website&lt;/h2&gt;

&lt;p&gt;There are quite some options for archiving a website (see &lt;a href=&quot;https://github.com/iipc/awesome-web-archiving&quot;&gt;Awesome Web Archiving List&lt;/a&gt;). I prefer using the &lt;a href=&quot;https://www.httrack.com&quot;&gt;httrack&lt;/a&gt; command line tool. On MacOS using Homebrew install it simply with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install httrack
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These seem optimal httrack options for mirroring:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;httrack http://SITE_TO_ARCHIVE &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; DESTINATION_DIR &lt;span class=&quot;nt&quot;&gt;-N&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%h%p/%n/index%[page].%t&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-WqQ&lt;/span&gt;%v &lt;span class=&quot;nt&quot;&gt;--robots&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0 &lt;span class=&quot;nt&quot;&gt;--footer&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The tool will prompt you if external links should be followed.&lt;/p&gt;

&lt;p&gt;If you like, relative links can also be rewritten afterwards e.g. “about.html” to “about”. This is optional but useful if you want to preserve the URL paths (for inbound links).&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;*.html&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f &lt;span class=&quot;nt&quot;&gt;-print0&lt;/span&gt; | xargs &lt;span class=&quot;nt&quot;&gt;-0&lt;/span&gt; perl &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pe&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;s/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;index.html/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/g&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Copy the homepage index index/index.html to the site root and change include paths and links in it (remove “../” everywhere).&lt;/p&gt;

&lt;p&gt;If the source site uses HTTP authentication, provide username and password as part of the URL: username:password@your.url&lt;/p&gt;

&lt;p&gt;The resulting files can be served from some inexpensive static web hosting like Netlify or Github Pages.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.httrack.com/html/fcguide.html&quot;&gt;Httrack users guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.drupal.org/node/27882&quot;&gt;Archiving Drupal sites&lt;/a&gt; on drupal.org.&lt;/li&gt;
  &lt;li&gt;Karen from Lullabot &lt;a href=&quot;https://www.lullabot.com/articles/sending-drupal-site-retirement-using-httrack&quot;&gt;about archiving Drupal sites&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="webtech" /></entry><entry><title type="html">Ruby on Rails with Docker in production</title><link href="https://larsp.dev/rails/ruby-on-rails-docker-production/" rel="alternate" type="text/html" title="Ruby on Rails with Docker in production" /><published>2022-07-12T00:00:00+02:00</published><updated>2022-07-12T00:00:00+02:00</updated><id>repo://posts.collection/_posts/2022-07-12-ruby-on-rails-docker-production.md</id><content type="html" xml:base="https://larsp.dev/rails/ruby-on-rails-docker-production/">&lt;p&gt;Docker is great. Clean separation of applications, neatly defined versions of the underlying software and languages lead to consistent, replicable testing and deployments in all kinds of environments. Not only during development, but also for production.&lt;/p&gt;

&lt;p&gt;There are several&lt;/p&gt;

&lt;p&gt;Maybe not all three database clients MySQL/PostgreSQL/SQLite that are included in the Dockerfile are necessary for your application, so omit what isn’t needed.&lt;/p&gt;

&lt;h3 id=&quot;dockerfile&quot;&gt;Dockerfile&lt;/h3&gt;

&lt;div class=&quot;language-docker highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Ruby on Rails application in production mode&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; ruby:3.1.2&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-sL&lt;/span&gt; https://deb.nodesource.com/setup_14.x | bash -
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;apt-get update &lt;span class=&quot;nt&quot;&gt;-qq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-qq&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--no-install-recommends&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  nodejs &lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  mariadb-client &lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  postgresql-client &lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  sqlite3 &lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get clean &lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; /var/lib/apt/lists/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; yarn
&lt;span class=&quot;k&quot;&gt;WORKDIR&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; /app&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; Gemfile Gemfile.lock ./&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;bundler
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;bundle config &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;force_ruby_platform &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;bundle config &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--local&lt;/span&gt; without &lt;span class=&quot;s1&quot;&gt;&apos;development test&apos;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--jobs&lt;/span&gt; 20 &lt;span class=&quot;nt&quot;&gt;--retry&lt;/span&gt; 5
&lt;span class=&quot;k&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; RAILS_ENV production&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; RACK_ENV production&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; . ./&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SECRET_KEY_BASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rails secret&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rails assets:precompile
&lt;span class=&quot;k&quot;&gt;EXPOSE&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; 3000&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CMD&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; bundle exec rails s -e production -p 3000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Extend with a Github action to build on commit (similar to &lt;a href=&quot;/webtech/bridgetown/&quot;&gt;autobuilding this Bridgetown site&lt;/a&gt;) and push the image to a repository like Docker Hub or Amazon ECR.&lt;/p&gt;

&lt;p&gt;Combine with nginx or &lt;a href=&quot;https://github.com/traefik/traefik&quot;&gt;Traefik&lt;/a&gt; as load balancer/reverse proxy.&lt;/p&gt;

&lt;p&gt;Using nginx an additional certbot container is needed to generate and renew Letsencrypt TLS certificates. Traefik will handle this by itself.&lt;/p&gt;</content><author><name></name></author><category term="rails" /></entry><entry><title type="html">Bridgetown with Github Pages and custom domain</title><link href="https://larsp.dev/webtech/bridgetown/" rel="alternate" type="text/html" title="Bridgetown with Github Pages and custom domain" /><published>2022-04-30T00:00:00+02:00</published><updated>2022-04-30T00:00:00+02:00</updated><id>repo://posts.collection/_posts/2022-04-30-bridgetown.md</id><content type="html" xml:base="https://larsp.dev/webtech/bridgetown/">&lt;p&gt;For this personal website, I wanted to keep it lean and minimal and the blogging software or CMS should stay out of the way. It shouldn’t be a hassle to maintain or update. So in 2022 I started this site with the &lt;a href=&quot;https://bridgetownrb.com/&quot;&gt;Bridgetown&lt;/a&gt; static site generator. And so far, it’s going well.&lt;/p&gt;

&lt;p&gt;Having become quite an avid fan of Ruby in my recent developer years, a Ruby-powered static site generator seems a good fit. Bridgetown stands on the shoulders of &lt;a href=&quot;https://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;, which became immensely popular through Github Pages.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;“Like the Ruby language itself, Bridgetown is optimized for web developer happiness.”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There is an undeniable appeal to static websites. Fast and simple, solid and staying as they are, without surprises (usually).&lt;/p&gt;

&lt;h2 id=&quot;build-and-deploy-on-github&quot;&gt;Build and deploy on Github&lt;/h2&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://twitter.com/andrewmcodes&quot;&gt;@andrewmcodes&lt;/a&gt; for the writeup on &lt;a href=&quot;https://andrewm.codes/deploy-bridgetown-to-github-pages/&quot;&gt;how to setup the Bridgetown Github Pages plugin&lt;/a&gt; to automatically publish a site when pushing new content.&lt;/p&gt;

&lt;p&gt;I noticed that in order to get the deployment working with a custom domain the &lt;em&gt;cname&lt;/em&gt; setting has to be included in the workflow file:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# .github/workflows/gh-pages.yml (Deploy section)&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deploy&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;peaceiris/actions-gh-pages@v3&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;github_token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;publish_dir&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./output&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;cname&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;larsp.dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To prevent the auto reload script from being included in the deployed code I also changed the build environment in the Rakefile to &lt;em&gt;production&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Rakefile&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Build the Bridgetown site for deployment&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:deploy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:clean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;frontend:build&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;BRIDGETOWN_ENV&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;production&quot;&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Bridgetown&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Commands&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;View this site’s source on &lt;a href=&quot;https://github.com/lape/larsp-website&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://bridgetownrb.com/&quot;&gt;Bridgetown&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bridgetownrb/bridgetown&quot;&gt;Bridgetown’s Github repo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://andrewm.codes/deploy-bridgetown-to-github-pages/&quot;&gt;How to Deploy Your Bridgetown Site to Github Pages — andrewm.codes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="webtech" /></entry></feed>